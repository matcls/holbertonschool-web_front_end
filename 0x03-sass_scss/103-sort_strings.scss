/* Sorts the variable $list_to_sort and prints the sorted list in the
 * debug output. */
@import "103-sort_list";

$keys: "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z" !default;

@function str-compare($a, $b, $keys) {
  $a: to-lower-case($a + unquote(""));
  $b: to-lower-case($b + unquote(""));

  @for $i from 1 through min(str-length($a), str-length($b)) {
    $char-a: str-slice($a, $i, $i);
    $char-b: str-slice($b, $i, $i);

    @if $char-a and $char-b and index($keys, $char-a) != index($keys, $char-b) {
      @return index($keys, $char-a) < index($keys, $char-b);
    }
  }

  @return str-length($a) < str-length($b);
}

@function quick-sort($list_to_sort, $keys) {
  $less: ();
  $equal: ();
  $large: ();

  @if length($list_to_sort) > 1 {
    $seed: nth($list_to_sort, ceil(length($list_to_sort) / 2));

    @each $item in $list_to_sort {
      @if $item == $seed {
        $equal: append($equal, $item, list-separator($list_to_sort));
      }
      @else if str-compare($item, $seed, $keys) {
        $less: append($less, $item, list-separator($list_to_sort));
      }
      @else if not str-compare($item, $seed, $keys) {
        $large: append($large, $item, list-separator($list_to_sort));
      }
    }

    @return join(join(quick-sort($less, $keys), $equal), quick-sort($large, $keys));
  }

  @return $list_to_sort;
}

@debug quick-sort($list_to_sort, $keys);
